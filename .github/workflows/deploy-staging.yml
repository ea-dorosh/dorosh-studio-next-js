name: Build & Deploy Dorosh Studio (Staging)

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create staging env file
        run: |
          echo "REACT_APP_API_URL=${{ secrets.STUDIO_STAGING_API_URL }}" > .env.production
          echo "REACT_APP_API_URL=${{ secrets.STUDIO_STAGING_API_URL }}" > .env.local

      - name: Build and pack Next.js app
        run: |
          npm ci
          npm run build
          tar czf nextjs-app.tar.gz .next package.json package-lock.json public next.config.js src .env.production

      - name: Upload Next.js artifact
        uses: actions/upload-artifact@v4
        with:
          name: nextjs-build
          path: nextjs-app.tar.gz

  deploy:
    needs: build
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: Download Next.js artifact
        uses: actions/download-artifact@v4
        with:
          name: nextjs-build

      - name: Copy artifact to EC2 Staging
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.STUDIO_EC2_STAGING_HOST }}
          username: ${{ secrets.STUDIO_EC2_STAGING_USER }}
          key: ${{ secrets.STUDIO_EC2_STAGING_SSH_KEY }}
          source: nextjs-app.tar.gz
          target: /var/www/dorosh-studio

      - name: Deploy on EC2 Staging via SSH
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.STUDIO_EC2_STAGING_HOST }}
          username: ${{ secrets.STUDIO_EC2_STAGING_USER }}
          key: ${{ secrets.STUDIO_EC2_STAGING_SSH_KEY }}
          script: |
            set -e
            cd /var/www/dorosh-studio

            # Extract the build files
            tar xzf nextjs-app.tar.gz

            # Install production dependencies
            npm ci --omit=dev

            # Create staging .env file
            cat > .env << 'ENVEOF'
            REACT_APP_API_URL=https://crm-staging.moodbeauty.de/
            ENVEOF

            # Restart the Next.js staging application with PM2
            pm2 delete dorosh-studio-staging || true
            pm2 start npm --name dorosh-studio-staging -- start -- -p 3501
            pm2 save

            # Clean up archive
            rm -f nextjs-app.tar.gz

            echo "âœ… Staging deployment completed!"
            echo "Next.js Staging: https://staging.moodbeauty.de/"

